@model IssueTracker.ViewModels.ProjectViewModel

@{
    ViewBag.Title = @SharedStrings.FormEdit;
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@ProjectStrings.EntityName</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Code)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OwnerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OwnerId, new SelectList(ViewBag.UsersList, "Id", "Email"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedUsers, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedUsers, new MultiSelectList(ViewBag.UsersList, "Id", "Email", Model.SelectedUsers), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelectedUsers, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@SharedStrings.FormSave" class="btn btn-default"/>
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink(SharedStrings.BackToList, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}