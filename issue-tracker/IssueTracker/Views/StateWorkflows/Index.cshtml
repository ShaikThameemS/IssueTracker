@model IEnumerable<IssueTracker.ViewModels.StateWorkflowViewModel>
@Scripts.Render("~/bundles/gojs")
@Scripts.Render("~/bundles/gojs-model")
<script>
    function gojs_create_flow() {
        jQuery.getJSON("StateWorkflows/WorkflowVisualization", load);
    }
    window.onload = gojs_init;
</script>
@{
    Layout = "~/Views/Shared/_SettingsTabbedLayout.cshtml";
    ViewBag.Title = StateWorkflowStrings.TitleIndex;
}

<h2>@ViewBag.Title</h2>
<br/>

<div id="swVisualization"></div>
<br /><br />

@if (Model.ToList().Count == 0)
{
    <i>@Html.Raw(string.Format(StateWorkflowStrings.ListNoResult, Html.ActionLink(StateWorkflowStrings.ListNoResultNew, "Create")))</i>
}
else
{
    <table class="table entity-listing">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FromStateId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ToStateId)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FromState.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ToState.Title)
                </td>
                <td>
                    @Html.ActionLink(SharedStrings.ButtonEdit, "Edit", new { id = item.Id }) |
                    @Html.ActionLink(SharedStrings.ButtonDetails, "Details", new { id = item.Id }) |
                    @Html.ActionLink(SharedStrings.ButtonDelete, "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </table>
}